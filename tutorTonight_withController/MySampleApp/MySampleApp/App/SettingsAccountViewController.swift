//
//  MainViewController.swift
//  MySampleApp
//
//
// Copyright 2016 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-swift v0.4
//

import UIKit
import AWSMobileHubHelper


class SettingsAccountViewController: UITableViewController {
    
    var titles = ["First Name", "Last Name", "Email", "Student", "Tutor"]
    var details = [LoginViewController.myGlobals.globalFirstName,
                   LoginViewController.myGlobals.globalLastName,
                   LoginViewController.myGlobals.globalEmail,
                   LoginViewController.myGlobals.globalStudentStatus,
                   LoginViewController.myGlobals.globalTutorStatus]
                   
    var willEnterForegroundObserver: AnyObject!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        navigationItem.backBarButtonItem = UIBarButtonItem(title: "Back", style: .Plain, target: nil, action: nil)
        updateTheme()
        willEnterForegroundObserver = NSNotificationCenter.defaultCenter().addObserverForName(UIApplicationWillEnterForegroundNotification, object: nil, queue: NSOperationQueue.currentQueue()) { _ in
            self.updateTheme()
        }
        
        //THIS WAY WORKS AS WELL! USE THIS METHOD FOR DYNAMIC UPDATING
//        self.titles.append("First Name")
//        self.titles.append("Last Name")
//        self.titles.append("Email")
//        self.details.append(LoginViewController.myGlobals.globalFirstName)
//        self.details.append(LoginViewController.myGlobals.globalLastName)
//        self.details.append(LoginViewController.myGlobals.globalEmail)
//        self.tableView.reloadData()
    }
    
    deinit {
        NSNotificationCenter.defaultCenter().removeObserver(willEnterForegroundObserver)
    }
    
    // NUMBER OF CELLS TO POPULATE
    override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return titles.count
    }
    
    // DETAILS OF EACH CELL
    override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCellWithIdentifier("MainViewCell")!
        cell.textLabel!.text = titles[indexPath.row]
        cell.detailTextLabel!.text = details[indexPath.row]
        return cell
    }
    
    
    func updateTheme() {
        let settings = ColorThemeSettings.sharedInstance
        settings.loadSettings { (themeSettings: ColorThemeSettings?, error: NSError?) -> Void in
            guard let themeSettings = themeSettings else {
                print("Failed to load color: \(error)")
                return
            }
            dispatch_async(dispatch_get_main_queue(), {
                let titleTextColor: UIColor = themeSettings.theme.titleTextColor.UIColorFromARGB()
                self.navigationController!.navigationBar.barTintColor = themeSettings.theme.titleBarColor.UIColorFromARGB()
                self.view.backgroundColor = themeSettings.theme.backgroundColor.UIColorFromARGB()
                self.navigationController!.navigationBar.tintColor = titleTextColor
                self.navigationController!.navigationBar.titleTextAttributes = [NSForegroundColorAttributeName: titleTextColor]
            })
        }
    }
}
